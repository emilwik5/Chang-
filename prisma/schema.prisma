generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model RefreshToken {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  revoked   Boolean
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  createAt  DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Genre {
  id     Int     @id
  name   String
  movies Movie[] @relation("GenreToMovie")
}

model ProductionCompany {
  id     Int     @id
  name   String
  movies Movie[] @relation("MovieToProductionCompany")
}

model Movie {
  id                  Int                 @id
  title               String
  originalTitle       String
  overview            String
  popularity          Float
  releaseDate         String
  runtime             Int
  tagline             String
  genres              Genre[]             @relation("GenreToMovie")
  productionCompanies ProductionCompany[] @relation("MovieToProductionCompany")
  watchedlistedBy     User[]
  reviews             MovieReview[]
}

model MovieReview {
  id      Int     @default(autoincrement())
  userId  String
  user    User    @relation(fields: [userId], references: [id])
  movieId Int
  movie   Movie   @relation(fields: [movieId], references: [id], onDelete: Cascade)
  rating  Int
  content String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([userId, movieId])
}

model User {
  id             String        @id @default(uuid())
  username       String
  email          String
  password       String
  meta           Json?
  watchlist      Movie[]
  reviewedMovies MovieReview[]

  refreshTokens RefreshToken[]
}

model InviteCode {
  id      Int     @id @default(autoincrement())
  code    String
  revoked Boolean
}
